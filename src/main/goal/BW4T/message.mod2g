module message[exit=always] {
	#import "messageTranslation.pl".
	program {		
		% we still need to translate these messages.
		forall bel(received(Agt,msg(Mess)), translate(Agt,Mess,Transl), strjoin([Agt, ' says'],WhoSays)) 
		do sendToGUI(WhoSays,Transl)+delete(received(Agt,msg(Mess))).

		% handle user's request to send message.
		% 'all' and 'allother' can't be in a variable anymore. Treat separately. 
		
		forall bel(percept(sendMessage(all,Mess)), me(Me), translate(Me,Mess,Transl))
		do all.send(msg(Mess)) + sendToGUI('I say',Transl).
		
		forall bel(percept(sendMessage(allother,Mess)), me(Me), translate(Me,Mess,Transl))
		do allother.send(msg(Mess)) + sendToGUI('I say',Transl).
		
		forall bel(percept(sendMessage(Receiver,Mess)), not(Receiver=all), not(Receiver=allother), me(Me), translate(Me,Mess,Transl))
		do (Receiver).send(msg(Mess)) + sendToGUI('I say',Transl).
	}
	actionspec {
		sendToGUI(Sender,Message) {
			pre { true }
			post { }
		}	
	} 
}
