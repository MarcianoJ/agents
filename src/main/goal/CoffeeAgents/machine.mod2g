% General machine, can be either coffeemaker or coffeegrinder.
% This machine tries to make and deliver products according to its goals.
use coffee as knowledge.
use coffee as actionspec.
exit=nogoals.

module machine {
	% if another machine needs a product and we have it, then deliver that product.
	if goal(delivered(Machine,Product)), bel(have(Product)) then
		(Machine).send(have(Product)) + insert(delivered(Machine,Product)).
	
	% if we want to have a product and we can make it ourselves, then do so.
	if goal(have(Product)), bel(canMake(Product)) 
		then make(Product).
	
	% if we can't produce something ourselves we need to order it.	
	% if we know who can, tell that machine to make it for us.
	if goal(have(Product)), bel(canProduce(Machine,Product))
		then (Machine).send!(have(Product)).
	% if we don't know that, ask everyone else what they can make for us.
	if goal(have(Product)), not(bel(canProduce(_,Product)))
		then allother.send?(canProduce(_)).
}
