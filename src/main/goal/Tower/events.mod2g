use tower as knowledge.

define constructiveMove(X, Y) as
   a-goal( tower([X,Y|T]) ), bel( tower([Y|T]), clear(Y), (clear(X) ; holding(X)) ).
define misplaced(X) as a-goal( on(Y, Z) ), bel( above(X, Z); above(X, Y) ).

module events {
	% assumes full observability
	forall bel( block(X)), not(percept(block(X)))  do delete( block(X) ).
	forall percept(block(X)), bel(not(block(X)) ) do insert( block(X) ).
	
	forall bel( holding(X)), not(percept(holding(X))) do delete( holding(X) ).
	forall percept(holding(X)),  bel( not(holding(X)) ) do insert( holding(X) ).
	
	forall bel( on(X,Y)), not(percept(on(X,Y))) do delete( on(X,Y) ).
	forall percept(on(X,Y)), bel(not(on(X,Y)) ) do insert( on(X,Y) ).
	
	if not(goal(holding(_))), constructiveMove(X,Y) then adopt(holding(X)).
    if not(goal(holding(_))), misplaced(X) then adopt(holding(X)).
}